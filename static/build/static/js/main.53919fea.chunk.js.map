{"version":3,"sources":["serviceWorker.ts","reducers/index.tsx","reducers/questionList.js","reducers/login.tsx","reducers/loading.tsx","reducers/registration.tsx","reducers/header.js","reducers/generic.js","stores/index.tsx","actions/genericAction.js","actions/questionsAction.js","components/question/questionList.js","components/rank/tableTop.tsx","components/askQuestion/askQuestion.js","components/body/body.js","components/login/login.js","components/loading/loading.tsx","containers/loading.js","utils/index.tsx","actions/login.tsx","containers/login.tsx","components/registration/registration.js","containers/registration.js","components/changePassword/changePassword.js","components/profile/userProfile.js","containers/profile.js","components/createQuestion/createQuestion.js","components/viewQuestion/viewQuestion.js","configs/router.tsx","components/header/header.js","containers/header.js","components/main.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","combineReducers","questionsList","state","arguments","length","undefined","action","type","data","question","login","error","errorMsg","Object","assign","loading","status","flag","registration","errorType","headerInfo","isUserLoggedIn","name","userInfo","showError","createStore","reducer","applyMiddleware","thunk","genericError","errorObj","createQuestion","questionInfo","dispatch","axios","post","then","res","catch","e","pageNo","get","concat","questionDetails","questionId","QuestionsList","fetch","paginationType","preventDefault","_this$props","_this","props","questions","next","previous","split","showQuestionDetails","questionObj","stopPropagation","history","_id","title","push","encodeURI","this","_this2","_questions$results","results","react_default","a","createElement","react","ListGroup","map","Item","key","onClick","Row","Col","sm","Button","variant","size","block","disabled","index_esm","Component","connect","bindActionCreators","TableTop","AskQuestion","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","react_router_dom","to","className","alt","Body","Container","fluid","questionList","tableTop_TableTop","askQuestion_AskQuestion","Login","call","submit","currentTarget","checkValidity","loginUser","username","userName","current","password","setState","validate","React","createRef","Jumbotron","Form","noValidate","validated","onSubmit","Alert","Group","controlId","Label","Control","placeholder","ref","required","Text","Loading","Spinner","animation","role","style","color","LoadingContainer","loading_Loading","RouteWithSubRoutes","route","react_router","exact","path","render","component","routes","Util","obj","defaultValue","hasOwnProperty","getType","values","join","trim","constructor","isUserActive","defaults","headers","common","document","cookie","LoginContainer","login_Login","containers_loading","loginInfo","checkForKey","response","Registration","getCalndarValue","showCalendar","calendarValue","dateOfBirth","toLocaleDateString","setGender","gender","update","updateUserDetails","email","toJSON","regUser","Date","genericDispatch","userDetails","prevProps","some","item","DOB","_this3","minWidth","register","confirmPassword","Check","custom","inline","label","id","onChange","checked","entry","RegistrationContainer","registration_Registration","regInfo","registerUser","info","updatedInfo","put","ChangePassword","console","log","assertThisInitialized","updatePassword","currentPassword","newPassword","confirmNewPassword","UserProfile","Tabs","activeKey","onSelect","Tab","eventKey","containers_registration","changePassword_ChangePassword","ProfileContainer","userProfile_UserProfile","CreateQuestion","generateQuestionObject","_assertThisInitialize","problem","code","expected","_this$props$error","as","rows","ViewQuestion","convertStringToHTMLEquivalent","replace","params","_this$props2","transformedCode","Header","logout","logoutUser","Navbar","bg","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","DropdownButton","ButtonGroup","Dropdown","HeaderContainer","header_Header","withRouter","Main","store","es","containers_header","index","utils_RouteWithSubRoutes","ReactDOM","main_Main","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.53919fea.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport { questionsList, question } from './questionList'\r\nimport { login, userInfo } from './login'\r\nimport { loading } from './loading'\r\nimport { registration } from './registration'\r\nimport { headerInfo } from './header'\r\nimport { error } from './generic'\r\nexport default combineReducers({ questionsList, question, login, loading, registration, headerInfo, userInfo, error });","const questionsList = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'LIST_OF_QUESTIONS':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nconst question = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'QUESTION_DETAILS':\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport { questionsList, question }","export const login = (state: any = { error: false, errorMsg: '' }, action: any) => {\r\n    switch (action.type) {\r\n        case 'USER_VALIDATION_ERROR':\r\n            return Object.assign({}, state, action.data)\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const userInfo = (state: any = {}, action: any) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_USER_DETAILS':\r\n            return Object.assign({}, state, action.data);\r\n        case 'CLEAR_USER_DETAILS':\r\n            return Object.assign({});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const loading = (state: any = { status: false }, action: any) => {\r\n    switch (action.type) {\r\n        case 'REQ_IS_PROCESSING':\r\n            return Object.assign({}, state, { status: action.flag });\r\n        default:\r\n            return state;\r\n    }\r\n}","export const registration = (state: any = { error: false, errorMsg: '', errorType: 'success' }, action: any) => {\r\n    switch (action.type) {\r\n        case 'REG_VALIDATION_ERROR':\r\n            return Object.assign({}, state, action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}","export const headerInfo = (state = { isUserLoggedIn: true, name: '' }, action) => {\r\n    switch (action.type) {\r\n        case 'USER_HEADER_DETAILS':\r\n            return Object.assign({}, state, { name: action.name, isUserLoggedIn: action.flag });\r\n        default:\r\n            return state;\r\n    }\r\n}","export const error = (state = { showError: false, errorMsg: '', errorType: 'success' }, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ERROR_MESSAGE':\r\n            return Object.assign({}, state, action.data);\r\n        case 'CLEAR_ERROR_MESSAGE':\r\n            return Object.assign({})\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from '../reducers'\r\n\r\nexport default createStore(reducer, applyMiddleware(thunk))","export const genericError = (errorObj) => {\r\n    return errorObj;\r\n}","import axios from 'axios'\r\nexport const createQuestion = (questionInfo) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.post('/api/v1/question/create/', questionInfo).then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n        }).catch((e) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n        });\r\n    }\r\n}\r\n\r\nexport const questionsList = (pageNo = 1) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.get(`/api/v1/question/create/?format=json&page=${pageNo}`).then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'LIST_OF_QUESTIONS', data: res.data });\r\n        }).catch((e) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n        });\r\n    }\r\n}\r\n\r\nexport const questionDetails = (questionId = '') => {\r\n    return (dispatch) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.get(`/api/v1/question/create/${questionId}/?format=json`).then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'QUESTION_DETAILS', data: res.data });\r\n        }).catch((e) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'ADD_ERROR_MESSAGE', data: { showError: true, errorType: 'warning', errorMsg: 'The Question has been deleted/removed by the creator.' } });\r\n        });\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { ListGroup, Button, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { FaArrowRight, FaArrowLeft } from 'react-icons/fa'\r\nimport { bindActionCreators } from 'redux';\r\nimport { questionsList } from '../../actions';\r\nclass QuestionsList extends Component {\r\n    componentDidMount() {\r\n        const { questionsList } = this.props;\r\n        questionsList();\r\n    }\r\n    fetch = (e, paginationType) => {\r\n        e.preventDefault();\r\n        const { questionsList, questions } = this.props;\r\n        const { next, previous } = questions;\r\n        switch (paginationType) {\r\n            case 'previous':\r\n                if (previous)\r\n                    questionsList(previous.split('page=')[1]);\r\n                break;\r\n            case 'next':\r\n                if (next)\r\n                    questionsList(next.split('page=')[1]);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    showQuestionDetails = (e, questionObj) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const { history } = this.props;\r\n        const { _id, title } = questionObj;\r\n        history.push(`/question/${_id}/${encodeURI(title)}`);\r\n    }\r\n    render() {\r\n        const { questions } = this.props;\r\n        const { results = [], next, previous } = questions;\r\n        return (\r\n            <Fragment>\r\n                <ListGroup>\r\n                    {results.map((question) => (\r\n                        <ListGroup.Item action key={question['_id']}>\r\n                            <h3 onClick={e => this.showQuestionDetails(e, question)}>{question.title}</h3>\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                </ListGroup>\r\n                <Row>\r\n                    <Col sm='6'>\r\n                        <Button variant=\"primary\" size=\"lg\" block onClick={e => this.fetch(e, 'previous')} disabled={!previous}><FaArrowLeft /> Previous</Button>\r\n                    </Col>\r\n                    <Col sm='6'>\r\n                        <Button variant=\"primary\" size=\"lg\" block onClick={e => this.fetch(e, 'next')} disabled={!next}>Next <FaArrowRight /></Button>\r\n                    </Col>\r\n                </Row>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { error: state.error, questions: state.questionsList }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ questionsList }, dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionsList)","import React, { Component } from 'react'\r\nexport default class TableTop extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Table Tops\r\n          </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './askQuestion.css'\r\nexport class AskQuestion extends Component {\r\n    render() {\r\n        return (\r\n            <Link to=\"/create/question\">\r\n                <button className='ask-question' alt=\"Ask Question\" title=\"Ask Question\">\r\n                    <span>+</span>\r\n                </button>\r\n            </Link>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport QuestionsList from '../question/questionList';\r\nimport TableTop from '../rank/tableTop';\r\nimport './body.css'\r\nimport { AskQuestion } from '../askQuestion/askQuestion';\r\nexport default class Body extends Component {\r\n    render() {\r\n        return (\r\n            <Container fluid={true}>\r\n                <Row>\r\n                    <Col sm='10'>\r\n                        <section>\r\n                            <QuestionsList {...this.props} />\r\n                        </section>\r\n                    </Col>\r\n                    <Col sm='2'>\r\n                        <section>\r\n                            <TableTop {...this.props} />\r\n                        </section>\r\n                    </Col>\r\n                </Row>\r\n                <AskQuestion />\r\n            </Container>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Jumbotron, Container, Form, Button, Row, Col, Alert } from 'react-bootstrap';\r\nimport './login.css'\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.userName = React.createRef();\r\n        this.password = React.createRef();\r\n        this.state = { validate: false }\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (!e.currentTarget.checkValidity())\r\n            this.setState((state, props) => {\r\n                return { validate: true }\r\n            });\r\n        else {\r\n            this.props.loginUser({\r\n                username: this.userName.current.value,\r\n                password: this.password.current.value\r\n            }, this.props.history);\r\n        }\r\n    }\r\n    render() {\r\n        if(this.props.headerInfo.isUserLoggedIn){\r\n            this.props.history.push('/');\r\n        }\r\n        return (\r\n            <Jumbotron fluid>\r\n                <Container className='r-login-form'>\r\n                    <Form noValidate\r\n                        validated={this.state.validate}\r\n                        onSubmit={this.submit}>\r\n                        {this.props.login.error && <Alert variant='danger'>\r\n                            {this.props.login.errorMsg}\r\n                        </Alert>}\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>User Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"User Name\" ref={this.userName} required />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your credentials with anyone else.\r\n                                    </Form.Text>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" ref={this.password} required />\r\n                        </Form.Group>\r\n                        <Row>\r\n                            <Col>\r\n                                <Button variant=\"primary\" type=\"submit\">\r\n                                    Login\r\n                                </Button>\r\n                            </Col>\r\n                            <Col>\r\n                                <Link to=''>Forgot Password</Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport './loading.css'\r\nexport default class Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div className='loading'>\r\n                <Spinner animation=\"border\" role=\"status\" style={{color:'white'}}>\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Loading from '../components/loading/loading';\r\nclass LoadingContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {this.props.loading.status && <Loading {...this.props}></Loading>}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { loading: state.loading }\r\n}\r\nexport default connect(mapStateToProps)(LoadingContainer)","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nconst RouteWithSubRoutes = (route: any) => {\r\n    return (\r\n        <Route\r\n            exact\r\n            path={route.path}\r\n            render={props => (\r\n                <route.component {...props} routes={route.routes} />\r\n            )} />\r\n    );\r\n}\r\nclass Util {\r\n    static checkForKey(obj: any, key: string, defaultValue?: string) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            if (Util.getType(obj[key]) === 'Object') {\r\n                return Object.values(obj).join(',');\r\n            }\r\n            else if(!obj[key].trim().length){\r\n                return defaultValue;\r\n            }\r\n            else {\r\n                return obj[key];\r\n            }\r\n        }\r\n        return defaultValue;\r\n    }\r\n    static getType(obj: any) {\r\n        return obj ? obj.constructor.name : null;\r\n    }\r\n}\r\nexport { RouteWithSubRoutes, Util }","import axios from 'axios'\r\nimport { Util } from '../utils';\r\nexport const loginUser = (loginInfo: any, history: any) => {\r\n    return (dispatch: any, state: any) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.post('/api/v1/auth/', loginInfo).then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'USER_HEADER_DETAILS', flag: true, name: loginInfo.username });\r\n            history.push('/');\r\n            axios.defaults.headers.common['X-CSRFToken'] = document.cookie.trim().split(';')[0].split('=')[1];\r\n        }).catch((e: any) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'USER_VALIDATION_ERROR', data: { errorType: 'danger', error: true, errorMsg: Util.checkForKey(e.response, 'data', 'Please contact Admin') } })\r\n        });\r\n    }\r\n}\r\n\r\nexport const registerUser = (regInfo: any, history: any) => {\r\n    return (dispatch: any, state: any) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.post('/api/v1/register/', regInfo).then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            history.push('/user/login');\r\n        }).catch((e: any) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'REG_VALIDATION_ERROR', data: { errorType: 'danger', error: true, errorMsg: Util.checkForKey(e.response, 'data', 'Please contact Admin') } })\r\n        });\r\n    }\r\n}\r\n\r\nexport const userDetails = () => {\r\n    return (dispatch: any, state: any) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.get('/api/v1/user/').then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'UPDATE_USER_DETAILS', data: res.data })\r\n        }).catch((e: any) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'REG_VALIDATION_ERROR', data: { errorType: 'danger', error: true, errorMsg: Util.checkForKey(e.response, 'data', 'Please contact Admin') } })\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (updatedInfo: any) => {\r\n    return (dispatch: any, state: any) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.put('/api/v1/user/', updatedInfo).then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'REG_VALIDATION_ERROR', data: { errorType: 'success', error: true, errorMsg: Util.checkForKey(res, 'data', 'Please contact Admin') } })\r\n        }).catch((e: any) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'REG_VALIDATION_ERROR', data: { errorType: 'danger', error: true, errorMsg: Util.checkForKey(e.response, 'data', 'Please contact Admin') } })\r\n        });\r\n    }\r\n}\r\n\r\nexport const updatePassword = (updatedInfo: any) => {\r\n    return (dispatch: any, state: any) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.put('/api/v1/chng/', updatedInfo).then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'ADD_ERROR_MESSAGE', data: { errorType: 'success', showError: true, errorMsg: Util.checkForKey(res, 'data', 'Please contact Admin') } })\r\n        }).catch((e: any) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'ADD_ERROR_MESSAGE', data: { errorType: 'danger', showError: true, errorMsg: Util.checkForKey(e.response, 'data', 'Please contact Admin') } })\r\n        });\r\n    }\r\n}\r\n\r\nexport const logoutUser = (history: any) => {\r\n    return (dispatch: any, state: any) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.get('/api/v1/logout/').then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'USER_HEADER_DETAILS', flag: false, name: '' });\r\n            history.push('/');\r\n            delete axios.defaults.headers.common['X-CSRFToken'];\r\n        }).catch((e: any) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n        });\r\n    }\r\n}\r\n\r\nexport const isUserActive = () => {\r\n    return (dispatch: any, state: any) => {\r\n        dispatch({ type: 'REQ_IS_PROCESSING', flag: true });\r\n        axios.get('/api/v1/isactive/').then(res => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'USER_HEADER_DETAILS', flag: true, name: res.data });\r\n            axios.defaults.headers.common['X-CSRFToken'] = document.cookie.trim().split(';')[0].split('=')[1];\r\n        }).catch((e: any) => {\r\n            dispatch({ type: 'REQ_IS_PROCESSING', flag: false });\r\n            dispatch({ type: 'USER_HEADER_DETAILS', flag: false, name: '' });\r\n        });\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Login from '../components/login/login';\r\nimport Loading from './loading';\r\nimport { loginUser, isUserActive } from '../actions/login';\r\nclass LoginContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Login {...this.props}></Login>\r\n                <Loading></Loading>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n    return { login: state.login, headerInfo: state.headerInfo }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        loginUser: (loginInfo: any, history: any) => { dispatch(loginUser(loginInfo, history)) },\r\n        isUserActive: () => {\r\n            dispatch(isUserActive())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer)","import React, { Component, Fragment } from 'react'\r\nimport { Jumbotron, Container, Form, Button, Alert } from 'react-bootstrap'\r\nimport { Calendar } from 'react-calendar'\r\nimport './registration.css'\r\nexport class Registration extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { validate: false, dateOfBirth: '', calendarValue: new Date(), showCalendar: false, gender: '' }\r\n    }\r\n    componentDidMount() {\r\n        this.props.genericDispatch({ type: 'REG_VALIDATION_ERROR', data: { errorType: '', error: false, errorMsg: '' } });\r\n        this.props.genericDispatch({ type: 'CLEAR_USER_DETAILS' });\r\n        if (this.props.update) {\r\n            this.props.userDetails();\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (['email', 'dateOfBirth', 'gender'].some(item => {\r\n            return this.props.userInfo[item] !== prevProps.userInfo[item];\r\n        })) {\r\n            const DOB = new Date(this.props.userInfo.dateOfBirth);\r\n            this.setState({ dateOfBirth: DOB.toLocaleDateString(), calendarValue: DOB, gender: this.props.userInfo.gender });\r\n            this.email.value = this.props.userInfo.email;\r\n        }\r\n    }\r\n    getCalndarValue = (value) => {\r\n        this.setState({ showCalendar: false, calendarValue: value, dateOfBirth: value.toLocaleDateString() })\r\n    }\r\n    setGender = (e) => {\r\n        this.setState({ gender: e.currentTarget.value })\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (!e.currentTarget.checkValidity())\r\n            this.setState((state, props) => {\r\n                return { validate: true }\r\n            });\r\n        else if (this.props.update) {\r\n            this.props.updateUserDetails({ email: this.email.value, gender: this.state.gender, dateOfBirth: this.state.calendarValue.toJSON() });\r\n        } else {\r\n            this.props.regUser({ username: this.username.value, password: this.password.value, email: this.email.value, gender: this.state.gender, dateOfBirth: this.state.calendarValue.toJSON() });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Jumbotron fluid>\r\n                <Container className={this.props.update ? 'update-reg-details' : 'r-login-form'}>\r\n                    <Form noValidate\r\n                        validated={this.state.validate}\r\n                        onSubmit={this.submit}\r\n                        style={{ minWidth: 300 }}>\r\n                        {this.props.register.error && <Alert variant={this.props.register.errorType}>\r\n                            {this.props.register.errorMsg}\r\n                        </Alert>}\r\n                        {!this.props.update &&\r\n                            <Fragment>\r\n                                <Form.Group controlId=\"formUsername\">\r\n                                    <Form.Label>User Name</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"User Name\" ref={e => this.username = e} required />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" ref={e => this.password = e} required />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formConfirmPassword\">\r\n                                    <Form.Label>Confitm Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Confirm Password\" ref={e => this.confirmPassword = e} required />\r\n                                </Form.Group>\r\n                            </Fragment>\r\n                        }\r\n                        <div>\r\n                            <Form.Label>Gender</Form.Label>\r\n                        </div>\r\n                        <div>\r\n                            <Form.Check custom inline type='radio' label='Male' value='Male' id='reg-gender-male' required onChange={this.setGender} checked={this.state.gender === 'Male'} />\r\n                            <Form.Check custom inline type='radio' label='Female' value='Female' id='reg-gender-female' required onChange={this.setGender} checked={this.state.gender === 'Female'} />\r\n                        </div>\r\n                        <Form.Group controlId=\"formEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Email\" ref={e => this.email = e} required />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formDateOfBirth\">\r\n                            <Form.Label>Date Of Birth</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Date Of Birth\" value={this.state.dateOfBirth} onClick={e => this.setState({ showCalendar: true })}\r\n                                onChange={e => this.setState({ showCalendar: true })} required />\r\n                        </Form.Group>\r\n                        {this.state.showCalendar && <Calendar value={this.state.calendarValue} onChange={this.getCalndarValue}></Calendar>}\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            {this.props.update ? 'Update' : 'Register'}\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loading from './loading';\r\nimport { Registration } from '../components/registration/registration';\r\nimport { registerUser, userDetails, updateUserDetails } from '../actions/login'\r\nclass RegistrationContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Registration {...this.props}></Registration>\r\n                <Loading></Loading>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { register: state.registration, userInfo: state.userInfo }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        regUser: (regInfo) => { dispatch(registerUser(regInfo)) },\r\n        userDetails: () => { dispatch(userDetails()) },\r\n        updateUserDetails: (info) => { dispatch(updateUserDetails(info)) },\r\n        genericDispatch: (action) => { dispatch(action) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistrationContainer)","import React, { Component } from 'react'\r\nimport { Jumbotron, Container, Form, Alert, Button } from 'react-bootstrap'\r\nexport class ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { validate: false }\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (!e.currentTarget.checkValidity())\r\n            this.setState((state, props) => {\r\n                return { validate: true }\r\n            });\r\n        else {\r\n            console.log(this)\r\n            this.props.updatePassword({ currentPassword: this.currentPassword.value, newPassword: this.newPassword.value });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Jumbotron fluid>\r\n                <Container className='update-reg-details'>\r\n                    <Form noValidate\r\n                        validated={this.state.validate}\r\n                        onSubmit={this.submit}\r\n                        style={{ minWidth: 300 }}>\r\n                        {this.props.error.showError && <Alert variant={this.props.error.errorType}>\r\n                            {this.props.error.errorMsg}\r\n                        </Alert>}\r\n                        <Form.Group controlId=\"currentPassword\">\r\n                            <Form.Label>Current Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Current Password\" ref={e => this.currentPassword = e} required />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"newPassword\">\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"New Password\" ref={e => this.newPassword = e} required />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"confirmNewPassword\">\r\n                            <Form.Label>Confirm New Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Confirm New Password\" ref={e => this.confirmNewPassword = e} required />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Jumbotron>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\nimport { ChangePassword } from '../changePassword/changePassword';\r\nimport QuestionsList from '../question/questionList';\r\nimport RegistrationContainer from '../../containers/registration'\r\nexport class UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { key: 'details' }\r\n    }\r\n    render() {\r\n        return (\r\n            <Tabs\r\n                id=\"profile-tab\"\r\n                activeKey={this.state.key}\r\n                onSelect={key => this.setState({ key })}>\r\n                <Tab eventKey=\"details\" title=\"Details\">\r\n                    <RegistrationContainer update={true}></RegistrationContainer>\r\n                </Tab>\r\n                <Tab eventKey=\"changepwd\" title=\"Change Password\">\r\n                    <ChangePassword {...this.props}></ChangePassword>\r\n                </Tab>\r\n                <Tab eventKey=\"questions\" title=\"Questions\">\r\n                    <QuestionsList></QuestionsList>\r\n                </Tab>\r\n            </Tabs>\r\n        );\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loading from './loading';\r\nimport { UserProfile } from '../components/profile/userProfile';\r\nimport { updatePassword } from '../actions/login';\r\nclass ProfileContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <UserProfile {...this.props}></UserProfile>\r\n                <Loading></Loading>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { error: state.error }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        genericDispatch(action) {\r\n            dispatch(action)\r\n        },\r\n        updatePassword: (info) => { dispatch(updatePassword(info)) }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)","import React, { Component } from 'react';\r\nimport { Form, Container, Jumbotron, Button, Alert } from 'react-bootstrap';\r\nimport LoadingContainer from '../../containers/loading';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { createQuestion } from '../../actions';\r\nclass CreateQuestion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { validate: false };\r\n    }\r\n    submit = (e) => {\r\n        const { createQuestion } = this.props;\r\n        e.preventDefault();\r\n        if (!e.currentTarget.checkValidity()) {\r\n            this.setState({ validate: true });\r\n        } else {\r\n            createQuestion(this.generateQuestionObject());\r\n        }\r\n    }\r\n    generateQuestionObject = () => {\r\n        const { title, problem, code, expected } = this;\r\n        return { title: title.value, problem: problem.value, code: code.value, expected: expected.value };\r\n    }\r\n    render() {\r\n        const { error = {} } = this.props;\r\n        return (\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <Form noValidate\r\n                        validated={this.state.validate}\r\n                        onSubmit={this.submit}>\r\n                        {error.showError && <Alert variant={error.errorType}>\r\n                            {error.errorMsg}\r\n                        </Alert>}\r\n                        <Form.Group controlId=\"question-name\">\r\n                            <Form.Label>Question Title</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Title of the Question...\" ref={name => this.title = name} required />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"problem-statement\">\r\n                            <Form.Label>Problem statement</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"3\" ref={problem => this.problem = problem}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"sample-code\">\r\n                            <Form.Label>Sample Code</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"10\" ref={code => this.code = code}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"expected-result\">\r\n                            <Form.Label>Expected-Result</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows=\"3\" ref={expected => this.expected = expected} />\r\n                        </Form.Group>\r\n                        <div className='center-align'>\r\n                            <Button variant=\"primary\" type=\"submit\" size=\"lg\" block>\r\n                                Create\r\n                        </Button>\r\n                        </div>\r\n                    </Form>\r\n                </Container>\r\n                <LoadingContainer></LoadingContainer>\r\n            </Jumbotron>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { error: state.error }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ createQuestion }, dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateQuestion)","import React, { Component, Fragment } from 'react';\r\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport { questionDetails, genericError } from '../../actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nclass ViewQuestion extends Component {\r\n    componentDidMount() {\r\n        const { questionDetails, match } = this.props;\r\n        const { params } = match;\r\n        questionDetails(params.id);\r\n    }\r\n    componentWillUnmount() {\r\n        const { genericError } = this.props;\r\n        genericError({ type: 'CLEAR_ERROR_MESSAGE' })\r\n    }\r\n    convertStringToHTMLEquivalent = (str = '') => {\r\n        return str.replace(/\\n/g, '<br>');\r\n    }\r\n    render() {\r\n        const { question, error } = this.props;\r\n        const transformedCode = this.convertStringToHTMLEquivalent(question.code)\r\n        return (\r\n            < Container fluid >\r\n                {\r\n                    error.showError && <Alert variant={error.errorType}>\r\n                        {error.errorMsg}\r\n                    </Alert>\r\n                }{\r\n                    !error.showError &&\r\n                    <Fragment>\r\n                        <Row>\r\n                            <Col>\r\n                                <h1>{question.title}</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <pre>{question.problem}</pre>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <pre>{transformedCode}</pre>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <pre>{question.expected}</pre>\r\n                            </Col>\r\n                        </Row>\r\n                    </Fragment>\r\n                }\r\n            </Container >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { error: state.error, question: state.question };\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ questionDetails, genericError }, dispatch);\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewQuestion)","import Body from \"../components/body/body\";\r\nimport LoginContainer from \"../containers/login\";\r\nimport RegistrationContainer from \"../containers/registration\";\r\nimport ProfileContainer from \"../containers/profile\";\r\nimport CreateQuestion from \"../components/createQuestion/createQuestion\";\r\nimport ViewQuestion from \"../components/viewQuestion/viewQuestion\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        component: Body\r\n    }, {\r\n        path: '/user/login',\r\n        component: LoginContainer\r\n    }, {\r\n        path: '/user/registration',\r\n        component: RegistrationContainer\r\n    }, {\r\n        path: '/user/profile',\r\n        component: ProfileContainer\r\n    }, {\r\n        path: '/create/question',\r\n        component: CreateQuestion\r\n    }, {\r\n        path: '/question/:id/:title',\r\n        component: ViewQuestion\r\n    }\r\n];\r\nexport default routes","import React, { Component, Fragment } from 'react'\r\nimport { Navbar, Nav, Form, Button, DropdownButton, Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css'\r\nexport default class Header extends Component {\r\n    componentDidMount() {\r\n        this.props.isUserActive();\r\n    }\r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        this.props.logoutUser(this.props.history);\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar bg=\"light\" expand=\"lg\" fixed=\"top\">\r\n                    <Navbar.Brand href=\"/\">Questions</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\"></Nav>\r\n                        <Form inline>\r\n                            {!this.props.headerInfo.isUserLoggedIn &&\r\n                                <Fragment>\r\n                                    <Button variant=\"outline-dark\" className='router-link'>\r\n                                        <Link to='/user/login'>Sign In</Link></Button>&nbsp;\r\n                                    <Button variant=\"outline-dark\" className='router-link'>\r\n                                        <Link to='/user/registration'>Sign Up</Link>\r\n                                    </Button>\r\n                                </Fragment>\r\n                            }\r\n                            {this.props.headerInfo.isUserLoggedIn && <DropdownButton as={ButtonGroup} title={this.props.headerInfo.name} id=\"login-info\">\r\n                                <Dropdown.Item eventKey=\"1\" onClick={e => { this.props.history.push('/user/profile') }}>Profile</Dropdown.Item>\r\n                                <Dropdown.Item eventKey=\"2\" onClick={this.logout}>Sign Out</Dropdown.Item>\r\n                            </DropdownButton>}\r\n                        </Form>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport Header from '../components/header/header';\r\nimport { logoutUser, isUserActive } from '.././actions/login'\r\nclass HeaderContainer extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Header {...this.props} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { headerInfo: state.headerInfo }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logoutUser: (history) => { dispatch(logoutUser(history)) },\r\n        isUserActive: () => { dispatch(isUserActive()) }\r\n    }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderContainer))","import React, { Component } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { Store } from 'redux';\r\nimport store from '../stores'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport routes from '../configs/router'\r\nimport { RouteWithSubRoutes } from '../utils';\r\nimport Header from '../containers/header'\r\nexport default class Main extends Component {\r\n    private store: Store<any> = store\r\n    render() {\r\n        return (\r\n            <Provider store={this.store}>\r\n                <Router>\r\n                    <Header></Header>\r\n                    <main>\r\n                        <section>\r\n                            {routes.map((item: any, index: number) => (\r\n                                <RouteWithSubRoutes key={index} {...item} />\r\n                            ))}\r\n                        </section>\r\n                    </main>\r\n                </Router>\r\n            </Provider>\r\n        )\r\n    }\r\n}","import \"babel-polyfill\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Main from './components/main';\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}